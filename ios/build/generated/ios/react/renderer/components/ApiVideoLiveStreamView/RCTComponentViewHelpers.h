/**
* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
*
* Do not edit this file as changes may cause incorrect behavior and will be lost
* once the code is regenerated.
*
* @generated by codegen project: GenerateComponentHObjCpp.js
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTApiVideoLiveStreamViewViewProtocol <NSObject>
- (void)startStreaming:(NSInteger)requestId streamKey:(NSString *)streamKey url:(NSString *)url;
- (void)stopStreaming;
- (void)setZoomRatioCommand:(float)zoomRatio;
@end

RCT_EXTERN inline void RCTApiVideoLiveStreamViewHandleCommand(
  id<RCTApiVideoLiveStreamViewViewProtocol> componentView,
  NSString const *commandName,
  NSArray const *args)
{
  if ([commandName isEqualToString:@"startStreaming"]) {
#if RCT_DEBUG
  if ([args count] != 3) {
    RCTLogError(@"%@ command %@ received %d arguments, expected %d.", @"ApiVideoLiveStreamView", commandName, (int)[args count], 3);
    return;
  }
#endif

  NSObject *arg0 = args[0];
#if RCT_DEBUG
  if (!RCTValidateTypeOfViewCommandArgument(arg0, [NSNumber class], @"number", @"ApiVideoLiveStreamView", commandName, @"1st")) {
    return;
  }
#endif
  NSInteger requestId = [(NSNumber *)arg0 intValue];

NSObject *arg1 = args[1];
#if RCT_DEBUG
  if (!RCTValidateTypeOfViewCommandArgument(arg1, [NSString class], @"string", @"ApiVideoLiveStreamView", commandName, @"2nd")) {
    return;
  }
#endif
  NSString * streamKey = (NSString *)arg1;

NSObject *arg2 = args[2];
#if RCT_DEBUG
  if (!RCTValidateTypeOfViewCommandArgument(arg2, [NSString class], @"string", @"ApiVideoLiveStreamView", commandName, @"3rd")) {
    return;
  }
#endif
  NSString * url = (NSString *)arg2;

  [componentView startStreaming:requestId streamKey:streamKey url:url];
  return;
}

if ([commandName isEqualToString:@"stopStreaming"]) {
#if RCT_DEBUG
  if ([args count] != 0) {
    RCTLogError(@"%@ command %@ received %d arguments, expected %d.", @"ApiVideoLiveStreamView", commandName, (int)[args count], 0);
    return;
  }
#endif

  

  [componentView stopStreaming];
  return;
}

if ([commandName isEqualToString:@"setZoomRatioCommand"]) {
#if RCT_DEBUG
  if ([args count] != 1) {
    RCTLogError(@"%@ command %@ received %d arguments, expected %d.", @"ApiVideoLiveStreamView", commandName, (int)[args count], 1);
    return;
  }
#endif

  NSObject *arg0 = args[0];
#if RCT_DEBUG
  if (!RCTValidateTypeOfViewCommandArgument(arg0, [NSNumber class], @"float", @"ApiVideoLiveStreamView", commandName, @"1st")) {
    return;
  }
#endif
  float zoomRatio = [(NSNumber *)arg0 floatValue];

  [componentView setZoomRatioCommand:zoomRatio];
  return;
}

#if RCT_DEBUG
  RCTLogError(@"%@ received command %@, which is not a supported command.", @"ApiVideoLiveStreamView", commandName);
#endif
}

NS_ASSUME_NONNULL_END